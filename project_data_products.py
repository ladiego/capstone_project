# -*- coding: utf-8 -*-
"""capstone_project_modul1_data_products.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10LmX9_oQxIqXoctLiLwKu8UrlP31Sb7D

###Extract data
"""

import os
import pandas as pd

all_files = []
path = r'/content/drive/MyDrive/data_sources/data_project_products/'

for filename in os.listdir(path):
  if filename.endswith(".csv"):
    print(filename)
    df = pd.read_csv(path+str(filename), header=0)
    all_files.append(df)

df = pd.concat(all_files, axis=0, ignore_index=True)
df.head()

"""###Delete Column"""

df.drop('Unnamed: 0',axis=1,inplace=True)
df.info()

"""###Change column position"""

kolom = df.columns.tolist()
kolom.insert(8, kolom.pop(kolom.index('discount_price')))
df_new = df[kolom]
df_new.head(1)

df_new['ratings'].unique()

df_new['ratings'] = pd.to_numeric(df_new['ratings'], errors='coerce')
df_new['ratings'] = df_new['ratings'].astype(float)
df_new['ratings'].unique()

df_new['no_of_ratings'].unique()

df_new['no_of_ratings'] = pd.to_numeric(df_new['no_of_ratings'].str.replace(',', ''), errors='coerce')
df_new['no_of_ratings'] = df_new['no_of_ratings'].astype(float)
df_new['no_of_ratings'].unique()

"""###find NaN in columns"""

df_new.isnull().any()

df_new.isnull().sum()

"""###delete data with empty values"""

df_new=df_new.dropna(subset=['ratings','no_of_ratings','actual_price'])

df_new.info()

df_new=df_new[df_new['actual_price']!='₹0']
df_new.info()

"""###reset index"""

df_new.reset_index(inplace=True)
df_new

"""###convert price to usd"""

df_new['actual_price']=df_new['actual_price'].astype(str).apply(lambda x: x.split('₹')[1] if '₹' in x else x)
df_new['actual_price']=df_new['actual_price'].str.replace(',','').astype(float).apply(lambda x: x/83.33) #assume 1 usd = 83.33 rupee
df_new.head(1)

df_new['discount_price']=df_new['discount_price'].astype(str).apply(lambda x: x.split('₹')[1] if '₹' in x else x)
df_new['discount_price']=df_new['discount_price'].str.replace(',','').astype(float).apply(lambda x: x/83.33).fillna(0)
df_new.head(1)

df_new.rename(columns={'actual_price': 'act_price_dollar', 'discount_price': 'disc_price_dollar'}, inplace=True)
df_new.head(1)

df_new['discount_in_percent']=(df_new['act_price_dollar']-df_new['disc_price_dollar'])/df_new['act_price_dollar']*100
df_new['discount_in_percent']=df_new['discount_in_percent'].apply(lambda x: round(x,2))
df_new.head(1)

df_new['main_category'].value_counts()

df_new['sub_category'].value_counts()

df_new[df_new['discount_in_percent']>70]['main_category'].value_counts()

df_new.sort_values('no_of_ratings')

df_new.groupby('ratings')['no_of_ratings'].sum().sort_values(ascending=False)

df_new.groupby('main_category')['disc_price_dollar'].agg(['count', 'mean'])

df_new.groupby(['sub_category'])['discount_in_percent'].mean().loc['Cameras']

max_price = df_new[df_new['disc_price_dollar'] == df_new['disc_price_dollar'].max()]['name'].iloc[0]
disp_max = df_new[df_new['name']==max_price]
disp_max

summary = df_new.groupby('main_category').agg({
    'disc_price_dollar': ['mean', 'min', 'max'],
    'ratings': 'mean',
    'no_of_ratings': 'sum',
    'discount_in_percent': 'mean'
}).reset_index()

summary.columns = ['Main Category', 'Avg Discount Price', 'Min Price', 'Max Price',
                            'Avg Rating', 'Total No of Ratings', 'Avg Discount in percent']

print(summary)

